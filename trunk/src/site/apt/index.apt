    -----
    One-Jar Maven Plugin Site
    -----
    Drew Stovall
    -----
    May 2007
    -----

One-Jar Maven Plugin

    I wanted to distribute an application as a single jar without making people
    download all the dependencies, and found
    {{{http://one-jar.sourceforge.net/}One-Jar}} on source-forge.  Since I'm
    also learning a bit of maven, writing a plugin to automatically build a
    one-jar jar seemed like a good idea.
    
    The project has moved to Google Code, which means the main front page is now at
    {{http://onejar-maven-plugin.googlecode.com/}}. You will also find Issue tracking there.

Updates (version 1.4.4)

    Updated by {{{http://www.simontuffs.com/}Simon Tuffs}} to use the actual 0.97 release version of one-jar.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.4.4/onejar-maven-plugin-1.4.4-sources.jar}Source Code}}


Updates (version 1.4.3)

    Updated by {{{http://blog.jayway.com/}Hugo Josefson}} to use the latest version of one-jar (0.97).
    If you want to use the previous version of one-jar, just specfiy 0.96 as the
    argument to the <<onejarVersion>> argument.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.4.3/onejar-maven-plugin-1.4.3-sources.jar}Source Code}}


Updates (version 1.4.2)

    Updated by {{{http://blog.jayway.com/}Hugo Josefson}} to fix Issue 21, renaming identically named jars to avoid ZipException.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.4.2/onejar-maven-plugin-1.4.2-sources.jar}Source Code}}


Updates (version 1.4.1)

    Updated by {{{http://blog.jayway.com/}Hugo Josefson}} to include system scope dependencies in the built jar.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.4.1/onejar-maven-plugin-1.4.1-sources.jar}Source Code}}


Updates (version 1.4.0)

    Updated by {{{http://blog.jayway.com/}Hugo Josefson}} to allow the generated one-jar to be attached to the build.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.4.0/onejar-maven-plugin-1.4.0-sources.jar}Source Code}}


Updates (version 1.3.0)

    Thank you to {{{http://code.google.com/u/eskatos.0}Paul}}
    for contributing code for supporting the {{{http://one-jar.sourceforge.net/index.php?page=introduction&file=native}binlib feature of One-Jar}}.

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.3.0/onejar-maven-plugin-1.3.0-sources.jar}Source Code}}


Updates (version 1.2.3)

    Updated by {{{http://blog.jayway.com/}Hugo Josefson}} to include runtime dependencies instead of compile time
    dependencies.
    
    Also thank you to Hannu for submitting the same fix, which reminded us to actually release this version!

    {{{http://onejar-maven-plugin.googlecode.com/svn/mavenrepo/org/dstovall/onejar-maven-plugin/1.2.3/onejar-maven-plugin-1.2.3-sources.jar}Source Code}}


Updates (version 1.2.2)

    Thank you to {{{http://www.ferociousflirting.com}Matthew O. Smith}}
    for contributing code to simplify the manifest manipulations and adding the Implementation Version manifest entry key.

    Thank you to Stig Kleppe-Jorgensen
    for contributing code to support multiproject builds.

    {{{http://dstovall.org/maven2/org/dstovall/onejar-maven-plugin/1.2.2/onejar-maven-plugin-1.2.2-sources.jar}Source Code}}


Updates (version 1.2.1)

    Thank you to {{{http://shineframework.sourceforge.net/site/index.html}Amir Kibbar}}
    for contributing code to allow the plugin to operate without an exectuable
    jar. (ie the mainClass configuration parameter)

    {{{http://dstovall.org/maven2/org/dstovall/onejar-maven-plugin/1.2.1/onejar-maven-plugin-1.2.1-sources.jar}Source Code}}

To Do

    This is a list of things I still want/need to add to the plugin...  Feel
    free to email me more ideas, give advice, or just voice an opinion on them.

    * Support the 'expand' functionality

    * Convert plugin to delegate to the ant tasks to increase seperation of
    concerns

    * Fix the manifest file to remove the boot warning that I get when running
    the resulting jar file.

    * Error out if the project's jar is not executable and no mainClass
    parameter is given. 

    * Some sort of test cases...

Error when starting your app?

    If you get this error when starting your application:

+----------------------------------------------+
Boot: Warning: Unable to locate main/main.jar in the JAR file target/myproject-1.0-SNAPSHOT.one-jar.jar
Exception in thread "main" java.lang.Exception: myproject-1.0-SNAPSHOT.one-jar.jar main class was not
found (fix: add main/main.jar with a Main-Class manifest attribute, or specify -Done-jar.main.class=<your.class.name>),
or use One-Jar-Main-Class in the manifest
    at com.simontuffs.onejar.Boot.run(Boot.java:285)
    at com.simontuffs.onejar.Boot.main(Boot.java:159)
+----------------------------------------------+

    Then you're either (a) not making your standard jar executable or (b) not
    providing a mainClass argument.  Better messaging about this configuration
    error is in the works.

Notes

    The maven documentation says that each module should really only be "one
    primary output per project" (see "Better Builds with Maven e-Book").
    I'm debating with myself on this point:  Part of me says that the one-jar
    output is not a "primary" output, so the current setup is fine... another
    part of me says that it is "primary" and that I should setup the plugin to
    run as a seperate project (under some super-project).  For now, I'm going
    with the status quo, but if you have any strong opinions on this topic,
    please let me know.

